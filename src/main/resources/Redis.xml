<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.12.1.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder location="classpath:redis.properties" />

	<!-- jedis pool配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大连接数 -->
		<property name="maxTotal" value="${jedis_pool_max_active}" />
		<!--最大空闲连接数 -->
		<property name="maxIdle" value="${jedis_pool_max_idle}" />
		<!--最大等待时间 -->
		<property name="maxWaitMillis" value="${jedis_pool_max_wait_millis}" />

		<property name="testWhileIdle" value="true" />
		<!--定时对线程池中空闲的链接进行validateObject校验 -->
		<property name="testOnBorrow" value="true" />
		<!--在进行returnObject对返回的connection进行validateObject校验 -->
		<property name="testOnReturn" value="true" />
	</bean>

	<!-- jedis 连接池 连接本地redis服务 构造器注入 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis_ip}" />
		<property name="port" value="${redis_port}" />
		<constructor-arg index="0" ref="poolConfig" />
	</bean>


	<!--  redis模板类 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<!-- 将session放入redis -->
	<bean id="redisHttpSessionConfiguration"
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="${spring_session_max_inactive_interval_in_seconds}" />
	</bean>

    <bean id="redisCache" class="com.gavin.redis.util.RedisCacheUtil">  
        <property name="redisTemplate" ref="redisTemplate" />  
    </bean>
</beans>